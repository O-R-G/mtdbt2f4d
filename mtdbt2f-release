#!/bin/bash

# this is used to check on next candidate for release
# read first from text file of last known release
# then try if the next file exists --
# if so, then cp etc and also update the text file
# number of last release is in mtdbt2f4d.txt
# running as .sh in cron requires aboslute paths
# src.zip (pass: mtdbt2f4d)
# * updated to work with global variables for paths *
# assumes paths relative to this file unless explicitly stated

COUNTER=0
EXIT=521			# the total number of fonts to try
SLEEP=5				# this if for dev only
RELEASED=$(cat mtdbt2f4d.txt)	# more robust

# configuration
										# quotes to avoid file disasters (*,.,etc.)
LOCAL="."									# use . for relative, or specify
STAGE="/usr/www/users/reinfurt/META-THE-DIFFERENCE/out/kadist"				# on meta-the-difference.com
REMOTE="~/public_html/drupal/sites/kadist.org/files/mtdbt2f4d"			# public www server distrubution
LIVE="~/www/drupal/sites/all/themes/gui/kadist/css/metafont/metafont-webfont"	# live www deployment

# unpack archive
# does not work in cron
unzip -q -P mtdbt2f4d -d "$LOCAL" src.zip

# main

let CANDIDATE=RELEASED+1

if [ $CANDIDATE -gt $EXIT ]; then
	let CANDIDATE=0
fi

while [ $COUNTER -lt $EXIT ]; do

	if [ -f "$LOCAL"/.ttf/mtdbt2f4d-$CANDIDATE.ttf ]; then

		echo $CANDIDATE > "$LOCAL"/mtdbt2f4d.txt
		echo "** mtdbt2f4d-$CANDIDATE.ttf ** released."

		# backup stage
		cp "$STAGE"/pdf/mtdbt2f4d.pdf "$STAGE"/pdf/mtdbt2f4d-$RELEASED.pdf
		cp "$STAGE"/png/mtdbt2f4d.png "$STAGE"/png/mtdbt2f4d-$RELEASED.png
		cp "$STAGE"/ttf/mtdbt2f4d.ttf "$STAGE"/ttf/mtdbt2f4d-$RELEASED.ttf
		cp "$STAGE"/eot/mtdbt2f4d.eot "$STAGE"/eot/mtdbt2f4d-$RELEASED.eot
		cp "$STAGE"/woff/mtdbt2f4d.woff "$STAGE"/woff/mtdbt2f4d-$RELEASED.woff

		# install stage
		cp "$LOCAL"/.pdf/mtdbt2f4d-$CANDIDATE.pdf "$STAGE"/pdf/mtdbt2f4d.pdf
		cp "$LOCAL"/.png/mtdbt2f4d-$CANDIDATE.png "$STAGE"/png/mtdbt2f4d.png
		cp "$LOCAL"/.ttf/mtdbt2f4d-$CANDIDATE.ttf "$STAGE"/ttf/mtdbt2f4d.ttf
		cp "$LOCAL"/.eot/mtdbt2f4d-$CANDIDATE.eot "$STAGE"/eot/mtdbt2f4d.eot
		cp "$LOCAL"/.woff/mtdbt2f4d-$CANDIDATE.woff "$STAGE"/woff/mtdbt2f4d.woff

		# backup remote
		cp "$REMOTE"/pdf/mtdbt2f4d.pdf "$REMOTE"/pdf/mtdbt2f4d-$RELEASED.pdf
		cp "$REMOTE"/png/mtdbt2f4d.png "$REMOTE"/png/mtdbt2f4d-$RELEASED.png
		cp "$REMOTE"/ttf/mtdbt2f4d.ttf "$REMOTE"/ttf/mtdbt2f4d-$RELEASED.ttf
		cp "$REMOTE"/eot/mtdbt2f4d.eot "$REMOTE"/eot/mtdbt2f4d-$RELEASED.eot
		cp "$REMOTE"/woff/mtdbt2f4d.woff "$REMOTE"/woff/mtdbt2f4d-$RELEASED.woff

		# install remote
		cp "$LOCAL"/.pdf/mtdbt2f4d-$CANDIDATE.pdf "$REMOTE"/pdf/mtdbt2f4d.pdf
		cp "$LOCAL"/.png/mtdbt2f4d-$CANDIDATE.png "$REMOTE"/png/mtdbt2f4d.png
		cp "$LOCAL"/.ttf/mtdbt2f4d-$CANDIDATE.ttf "$REMOTE"/ttf/mtdbt2f4d.ttf
		cp "$LOCAL"/.eot/mtdbt2f4d-$CANDIDATE.eot "$REMOTE"/eot/mtdbt2f4d.eot
		cp "$LOCAL"/.woff/mtdbt2f4d-$CANDIDATE.woff "$REMOTE"/woff/mtdbt2f4d.woff
		
		# install live
		cp "$LOCAL"/.ttf/mtdbt2f4d-$CANDIDATE.ttf "$LIVE"/mtdbt2f4d.ttf
		cp "$LOCAL"/.eot/mtdbt2f4d-$CANDIDATE.eot "$LIVE"/mtdbt2f4d.eot
		cp "$LOCAL"/.woff/mtdbt2f4d-$CANDIDATE.woff "$LIVE"/mtdbt2f4d.woff

		# public urls
		# http://meta-the-difference.com/out/kadist/pdf/mtdbt2f4d.pdf
		# http://meta-the-difference.com/out/kadist/png/mtdbt2f4d.png
		# http://meta-the-difference.com/out/kadist/ttf/mtdbt2f4d.ttf
		# http://meta-the-difference.com/out/kadist/eot/mtdbt2f4d.eot
		# http://meta-the-difference.com/out/kadist/woff/mtdbt2f4d.woff

		break
	else
		let CANDIDATE=CANDIDATE+1
		echo "No release candidate found. Trying again ..."		
	fi
	
	let COUNTER=COUNTER+1
	echo "candidate = $CANDIDATE"
	# sleep $SLEEP
done

# cleanup

rm -r "$LOCAL"/.pdf
rm -r "$LOCAL"/.png
rm -r "$LOCAL"/.ttf
rm -r "$LOCAL"/.eot
rm -r "$LOCAL"/.woff

# date and done

echo $(date)
echo "mtdbt2f4d-release exited ok."
echo "Thank you."
echo "*"
